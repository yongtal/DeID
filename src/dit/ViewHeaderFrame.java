/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package dit;

import dit.panels.AuditPanel;
import dit.panels.QCPanel;
import java.awt.Color;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.io.File;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.LinkedHashMap;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.SwingUtilities;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;

/**
 *
 * @author angelo
 */



public class ViewHeaderFrame extends javax.swing.JFrame {
    private HeaderFileTableModel hmodel;
    //public static boolean isExists = false;

    public ViewHeaderFrame(NIHImage image) {
        initComponents();
        //isExists = true;
        initTable(image);
        String displayName = image.getImageNewName();
        jLabel1.setText(displayName);  
    }

    private void initTable(NIHImage image){
        
        
        if ( image.getHeader().isEmpty()) {
            //if (image.getTempPotision().getAbsolutePath().endsWith("hdr") || image.getTempPotision().getAbsolutePath().endsWith("img"))
                if (!image.isNiiHdrFormat()) 
                    
                    image.create_Analyze_Header();
                
                else 
                    image.createHeader();
        }
        hmodel = new HeaderFileTableModel(image);
        tblHeaderFile.setModel(hmodel);
        tblHeaderFile.setDragEnabled(false);
        TableColumn col;
        col = tblHeaderFile.getColumnModel().getColumn(1);
        col.setPreferredWidth(90);
        col.setResizable(true);
        
        col = tblHeaderFile.getColumnModel().getColumn(0);
        col.setCellRenderer(new CustomRenderer());
    
        /*
        tblHeaderFile.getModel().addTableModelListener(new TableModelListener() {

            @Override
            public void tableChanged(TableModelEvent e) {
                //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                if ( true ) {
                    System.out.println("asdfasfdasdfdsfdfsdfsf");
                    jButton5.setEnabled(false);
                }
                else 
                    jButton5.setEnabled(true);
            
            }
        
        
        
        });
       */
    }
      

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblHeaderFile = new javax.swing.JTable();

        setTitle("View_Header");

        jLabel2.setText("Selected Image:");

        jButton4.setText("Revert");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setLabel("Done");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel1.setText("jLabel1");

        tblHeaderFile.setModel(new HeaderFileTableModel());
        tblHeaderFile.setMaximumSize(new java.awt.Dimension(7000, 7000));
        tblHeaderFile.setMinimumSize(new java.awt.Dimension(90, 70));
        jScrollPane2.setViewportView(tblHeaderFile);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 177, Short.MAX_VALUE)
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton4, jButton5});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(jButton5))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

        hmodel.revert();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // Done button
        if ( hmodel.isHeaderChanged() ) {
            if ( JOptionPane.showConfirmDialog(ViewHeaderFrame.this, "Save the Changed Header File?","Header File Changed",
                    JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION ) {
                hmodel.changeHeaderFile();
                System.out.println("The header file has changed");
            }
        }
        this.setVisible(false);
        //isExists = false;
    }//GEN-LAST:event_jButton5ActionPerformed

    
 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblHeaderFile;
    // End of variables declaration//GEN-END:variables
}

class CustomRenderer extends DefaultTableCellRenderer 
{
private static final long serialVersionUID = 6703872492730589499L;

@Override
    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column)
    {
        Component cellComponent = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);

        if(value.equals("Description") ||
            value.equals("Generated")  ||
            value.equals("Scannum")    ||
            value.equals("Patient ID") ||
            value.equals("Exp Date")   ||
            value.equals("Exp Time")   ||
            value.equals("db_name")    ||
            value.equals("Data type string") ||
            value.equals("History")    ){
            
            cellComponent.setBackground(Color.CYAN);
        }  else {
            cellComponent.setBackground(Color.YELLOW);
        }
        return cellComponent;
    }
}