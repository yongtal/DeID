/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package dit;

import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.DefaultCellEditor;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import javax.swing.JOptionPane;


/**
 *
 * @author angelo
 */
public class EditDemoDataFrame extends javax.swing.JFrame {

    /**
     * Creates new form EditDemoDataFrame
     */
    public EditDemoDataFrame() {
        initComponents();
        final CorrectDemoDataTableModel correctDemoModel = new CorrectDemoDataTableModel(DeidData.demographicData);
        jTable1.setModel(correctDemoModel);
       
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF); 
        
        final JTextField textField = new JTextField();
        for(int i=0; i< jTable1.getColumnCount(); i++)
        {
            jTable1.getColumnModel().getColumn(i).setCellEditor(new DefaultCellEditor(textField));
        }
        jTable1.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        textField.setEditable(true);
        textField.getDocument().addDocumentListener(new DocumentListener(){
        @Override
        public void changedUpdate(DocumentEvent e) {
            int i = jTable1.getSelectedRow();
            int j = jTable1.getSelectedColumn();            
            
            DeidData.demographicData.setValueAt(textField.getText(), i, j);
            correctDemoModel.setValueAt(textField.getText(), i, j);
            jTable1.setValueAt(textField.getText(), i, j);
            System.out.println("hit one"+i+" and " + j+textField.getText());
            jTable1.clearSelection();
            
        }
        @Override
        public void removeUpdate(DocumentEvent e) {
            if (textField.isShowing() && textField.getText().trim().equals("")){
            JOptionPane.showMessageDialog(null,
            "WARNING: This cell may need to be non-empty!", "Warning Massage",
            JOptionPane.WARNING_MESSAGE);
            }
        }
        @Override
        public void insertUpdate(DocumentEvent e) {
           
          /*  int i = jTable1.getSelectedRow();
            int j = jTable1.getSelectedColumn();
            DeidData.demographicData.setValueAt(textField.getText(), i, j);
            correctDemoModel.setValueAt(textField.getText(), i, j);
            jTable1.setValueAt(textField.getText(), i, j);
            System.out.println("hit one"+i+" and " + j+textField.getText());
            if (textField.getText().trim().equals("")){
            JOptionPane.showMessageDialog(null,
            "Error: This cell can not be empty!", "Error Massage",
            JOptionPane.ERROR_MESSAGE);
            }*/
        }
        
        
        
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setTitle("Edit demographic data");

        jTable1.setModel(new DemographicTableModel(new String[]{"No data"}, new Object[1][1]));
        jTable1.setCellSelectionEnabled(true);
        jTable1.setRowHeight(24);
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Done");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 568, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
